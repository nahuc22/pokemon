.button {
  --border-color: linear-gradient(-45deg, #ffae00, #7e03aa, #00fffb);
  --border-width: 0.125em;
  --curve-size: .5em;
  --blur: 30px;
  --bg: #080312;
  --color: #ffffff;
  color: var(--color);
  /* use position: relative; so that BG is only for .button */
  top: 10px;
  left: 10px;
  position: fixed;
  isolation: isolate;
  display: inline-grid;
  margin-left: 20px;
  place-content: center;
  padding: 0.5em 1.5em;
  font-size: 17px;
  border: 0;
  text-transform: uppercase;
  box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.6);
  clip-path: polygon(
    /* Top-left */ 0% var(--curve-size),
    var(--curve-size) 0,
    /* top-right */ 100% 0,
    100% calc(100% - var(--curve-size)),
    /* bottom-right 1 */ calc(100% - var(--curve-size)) 100%,
    /* bottom-right 2 */ 0 100%
  );
  transition: color 250ms;
}

.button::after,
.button::before {
  content: "";
  position: fixed;
  inset: 0;
}

.button::before {
  background: var(--border-color);
  background-size: 300% 300%;
  animation: move-bg7234 5s ease infinite;
  z-index: -2;
}

@keyframes move-bg7234 {
  0% {
    background-position: 31% 0%;
  }

  50% {
    background-position: 70% 100%;
  }

  100% {
    background-position: 31% 0%;
  }
}

.button::after {
  background: var(--bg);
  z-index: -1;
  clip-path: polygon(
    /* Top-left */ var(--border-width)
      calc(var(--curve-size) + var(--border-width) * 0.5),
    calc(var(--curve-size) + var(--border-width) * 0.5) var(--border-width),
    /* top-right */ calc(100% - var(--border-width)) var(--border-width),
    calc(100% - var(--border-width))
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
    /* bottom-right 1 */
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5))
      calc(100% - var(--border-width)),
    /* bottom-right 2 */ var(--border-width) calc(100% - var(--border-width))
  );
  transition: clip-path 500ms;
}

.button:where(:hover, :focus)::after {
  clip-path: polygon(
    /* Top-left */ calc(100% - var(--border-width))
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
    calc(100% - var(--border-width)) var(--border-width),
    /* top-right */ calc(100% - var(--border-width)) var(--border-width),
    calc(100% - var(--border-width))
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
    /* bottom-right 1 */
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5))
      calc(100% - var(--border-width)),
    /* bottom-right 2 */
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5))
      calc(100% - var(--border-width))
  );
  transition: 200ms;
}

.button:where(:hover, :focus) {
  color: #fff;
}
.linkHome{
  text-decoration: none;
  color: white;
}
.container {
  background-size: 100%;
  font-family: "Open Sans", sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  background-size: cover;
  background-attachment: fixed;
  background-repeat: no-repeat;
  width: 1950px;
  height: 100%;
  min-height: 100vh;
  background-position: center;
  background-image: url("../../assets/14719-pokemon.jpg");
}

.form {
  width: 300px;
  padding: 30px;
  flex-direction: column;
  display: flex;
  justify-content: center;
  backdrop-filter: blur(5px);
  box-shadow: 10px 10px 18px rgb(5, 14, 73);
}

.label {
  flex: 0 0 150px;
  text-align: right;
  margin-right: 10px;
  color: white;
}

.input {
  padding: 7px;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-bottom: 10px;
  width: 100%;
}
.select {
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-bottom: 10px;
  width: 200px;
}
.h1 {
  color: white;
  font-size: 30px;
}

/* .section{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #23232a;
}
.container{
    position:relative;
    width: 380px;
    height: 420px;
    background: #1c1c1c;
    border-radius: 8px;
    overflow: hidden;
}
.container::before{
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 380px;
    height: 420px;
    background: linear-gradient(0deg,transparent, transparent, #45f3ff, #45f3ff, #45f3ff);
    z-index: 1;
    transform-origin: bottom right;
    animation: animate 6s linear infinite;
}
.container::after{
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 380px;
    height: 420px;
    background: linear-gradient(0deg,transparent, transparent, #45f3ff, #45f3ff, #45f3ff);
    z-index: 1;
    transform-origin: bottom right;
    animation: animate 6s linear infinite;
    animation-delay: -3s;
}
.borderLine{
    position: absolute;
    top: 0;
    inset: 0;

}
.borderLine::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 380px;
    height: 420px;
    background: linear-gradient(0deg,transparent, transparent, #ff2770, #ff2770, #ff2770);
    z-index: 1;
    transform-origin: bottom right;
    animation: animate 6s linear infinite;
    animation-delay: -1.5s;
}
.borderLine::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 380px;
    height: 420px;
    background: linear-gradient(0deg,transparent, transparent, #ff2770, #ff2770, #ff2770);
    z-index: 1;
    transform-origin: bottom right;
    animation: animate 6s linear infinite;
    animation-delay: -4.5s;
}
@keyframes animate {
    0%
    {
        transform: rotate(0deg);
    }
    100%
    {
        transform: rotate(360deg);
    }
}
.container form{
    position: absolute;
    inset:4px;
    background: #222;
    padding: 50px 40px;
    border-radius:8px;
    z-index: 2;
    display: flex;
    flex-direction: column;
}
h1 {
    color: #fff;
    font-weight: 500;
    text-align: center;
    letter-spacing: 0.1em;
}

.container form .inputBox {
    position: relative;
    width: 300px;
    margin-top:35px ;
}
.container form .inputBox input{
    position: relative;
    width: 100%;
    padding: 20px 10px 10px;
    background:transparent;
    border: none;
    outline: none;
    box-shadow: none;
    color: white;
    font-size: 1em;
    letter-spacing: 0.05em;
    transition:0.5s;
    z-index: 10;

}
.container form .inputBox label {
    position: absolute;
    left: 0;
    padding: 20px 10px 10px;
    pointer-events: none;
    color: #8f8f8f;
    font-size: 1em;
    letter-spacing: 0.05em;
    transition: 0.5s;
}
.container form .inputBox input:valid ~ label,
.container form .inputBox input:focus ~ label{
    color: #fff;
    font-size: 0.75em;
    transform: translateY(-34px);
}
.container form .inputBox i {
    position:absolute;
    left:0;
    bottom: 0;
    width: 100%;
    height: 2px;
    background: #fff;
    border-radius: 4px;
    overflow: hidden;
    transition: 0.5s;
    pointer-events: none;
}
.container form .inputBox input:valid ~ i,
.container form .inputBox input:focus ~ i{
    height: 44px;
}
.container form.links{
    display: flex;
    justify-content: space-between;
}
.container form .links p {
    margin:10x 0;
    font-size: 0.75em;
    color: #8f8f8f;
    text-decoration: none;
}
.container form .links p:hover,
.container form .links p:nth-child(2){
    color:#fff;
}
button {
    border: none;
    outline: none;
    padding: 9px 25px;
    background: #fff;
    cursor: pointer;
    font-size: 0.9em;
    border-radius: 4px;
    font-weight: 600;
    width: 100px;
}

button :active {
    opacity: 0.8;
} */
